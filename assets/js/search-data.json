{
  
    
        "post0": {
            "title": "Safe Reinforcement Learning",
            "content": "Safe Reinforcement Learning . Safe Reinforcement Learning can be defined as the process of learning policies that maximize the expectation of the return in problems in which it is important to ensure reasonable system performance and/or respect safety constraints during the learning and/or deployment processes. . SAC-RCBF . “Safe Model-Based Reinforcement Learning using Robust Control Barrier Functions”. Specifically, an implementation of SAC + Robust Control Barrier Functions (RCBFs) for safe reinforcement learning in two custom environments. . While exploring, an RL agent can take actions that lead the system to unsafe states. Here, we use a differentiable RCBF safety layer that minimially alters (in the least-squares sense) the actions taken by the RL agent to ensure the safety of the agent. . Robust Control Barrier Functions (RCBFs) . In this work, we focus on RCBFs that are formulated with respect to differential inclusions of the following form: . Here D(x) is a disturbance set unkown apriori to the robot, which we learn online during traing via Gaussian Processes (GPs). The underlying library is GPyTorch. . The QP used to ensure the system’s safety is given by: . . where h(x) is the RCBF, and u_RL is the action outputted by the RL policy. As such, the final (safe) action taken in the environment is given by u = u_RL + u_RCBF as shown in the following diagram: . . Coupling RL &amp; RCBFs to Improve Training Performance . The above is sufficient to ensure the safety of the system, however, we would also like to improve the performance of the learning by letting the RCBF layer guide the training. This is achieved via: . Using a differentiable version of the safety layer that allows us to backpropagte through the RCBF based Quadratic Program (QP) resulting in an end-to-end policy. | Using the GPs and the dynamics prior to generate synthetic data (model-based RL). | .",
            "url": "https://tayalmanan28.github.io/my_blogs/reinforcement-learning/robotics/2022/05/02/Safe-Reinforcement-Learning.html",
            "relUrl": "/reinforcement-learning/robotics/2022/05/02/Safe-Reinforcement-Learning.html",
            "date": " • May 2, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Offline Reinforcement Learning",
            "content": "Offline Reinforcement Learning . Offline reinforcement learning requires reconciling two conflicting aims: learning a policy that improves over the behavior policy that collected the dataset, while at the same time minimizing the deviation from the behavior policy so as to avoid errors due to distributional shift. . . This trade-off is critical, because most current offline reinforcement learning methods need to query the value of unseen actions during training to improve the policy, and therefore need to either constrain these actions to be in-distribution, or else regularize their values. We propose an offline RL method that never needs to evaluate actions outside of the dataset, but still enables the learned policy to improve substantially over the best behavior in the data through generalization. The main insight in our work is that, instead of evaluating unseen actions from the latest policy, we can approximate the policy improvement step implicitly by treating the state value function as a random variable, with randomness determined by the action (while still integrating over the dynamics to avoid excessive optimism), and then taking a state conditional upper expectile of this random variable to estimate the value of the best actions in that state. This leverages the generalization capacity of the function approximator to estimate the value of the best available action at a given state without ever directly querying a Q-function with this unseen action. Our algorithm alternates between fitting this upper expectile value function and backing it up into a Q-function. Then, we extract the policy via advantage-weighted behavioral cloning. We dub our method implicit Q-learning (IQL). IQL demonstrates the state-of-the-art performance on D4RL, a standard benchmark for offline reinforcement learning. We also demonstrate that IQL achieves strong performance fine-tuning using online interaction after offline initialization. .",
            "url": "https://tayalmanan28.github.io/my_blogs/reinforcement-learning/robotics/2022/04/01/Offline-Reinforcement-Learning.html",
            "relUrl": "/reinforcement-learning/robotics/2022/04/01/Offline-Reinforcement-Learning.html",
            "date": " • Apr 1, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Getting Started with MuJoCo",
            "content": "Step 1: Install anaconda . https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh sudo chmod +x Anaconda3-2021.11-Linux-x86_64.sh ./Anaconda3-2021.11-Linux-x86_64.sh . Step 2 : install git sudo apt install git . Step 3 : install the mujoco library . Download the Mujoco library from here | create a hidden folder : mkdir /home/username/.mujoco | extract the library to the .mujoco folder | include these lines in .bashrc file: export LD_LIBRARY_PATH=/home/tayal/.mujoco/mujoco210/bin export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/nvidia export PATH=&quot;$LD_LIBRARY_PATH:$PATH&quot; export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libGLEW.so . | source .bashrc . | Test that the library is installed by going into: cd ~/.mujoco/mujoco210/bin ./simulate ../model/humanoid.xml | Step 4 Install mujoco-py: conda create –name mujoco_py python=3.8 conda activate mujoco_py sudo apt update sudo apt-get install patchelf sudo apt-get install python3-dev build-essential libssl-dev libffi-dev libxml2-dev sudo apt-get install libxslt1-dev zlib1g-dev libglew1.5 libglew-dev python3-pip . git clone https://github.com/openai/mujoco-py cd mujoco-py pip install -r requirements.txt pip install -r requirements.dev.txt pip3 install -e . --no-cache . Step 5 reboot your machine . Step 6 run these commands conda activate mujoco_py sudo apt install libosmesa6-dev libgl1-mesa-glx libglfw3 sudo ln -s /usr/lib/x86_64-linux-gnu/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so pip3 install -U &#39;mujoco-py&lt;2.2,&gt;=2.1&#39; cd examples python3 setting_state.py .",
            "url": "https://tayalmanan28.github.io/my_blogs/mujoco/simulations/robotics/2022/01/21/MuJoCo.html",
            "relUrl": "/mujoco/simulations/robotics/2022/01/21/MuJoCo.html",
            "date": " • Jan 21, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Optimization for Machine Learning",
            "content": "Motor . Basic setup .",
            "url": "https://tayalmanan28.github.io/my_blogs/optimization/machine-learning/robotics/2021/12/18/Optimization-for-ML.html",
            "relUrl": "/optimization/machine-learning/robotics/2021/12/18/Optimization-for-ML.html",
            "date": " • Dec 18, 2021"
        }
        
    
  
    
        ,"post4": {
            "title": "Probability and Stochastics",
            "content": "Motor . Basic setup .",
            "url": "https://tayalmanan28.github.io/my_blogs/probability/stochastics/robotics/2021/10/03/probability-and-stochastics.html",
            "relUrl": "/probability/stochastics/robotics/2021/10/03/probability-and-stochastics.html",
            "date": " • Oct 3, 2021"
        }
        
    
  
    
        ,"post5": {
            "title": "Tutorial on Control Theory",
            "content": "Motor . Basic setup .",
            "url": "https://tayalmanan28.github.io/my_blogs/pybullet/robotics/2021/01/13/Tutorial-on-control-theory.html",
            "relUrl": "/pybullet/robotics/2021/01/13/Tutorial-on-control-theory.html",
            "date": " • Jan 13, 2021"
        }
        
    
  
    
        ,"post6": {
            "title": "Reinforcement Learning",
            "content": "Motor . Basic setup .",
            "url": "https://tayalmanan28.github.io/my_blogs/reinforcement-learning/robotics/2020/08/23/reinforcement-learning.html",
            "relUrl": "/reinforcement-learning/robotics/2020/08/23/reinforcement-learning.html",
            "date": " • Aug 23, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "Tutorial on Pybullet",
            "content": "Motor . Basic setup .",
            "url": "https://tayalmanan28.github.io/my_blogs/pybullet/robotics/2020/05/16/Tutorial-on-Pybullet.html",
            "relUrl": "/pybullet/robotics/2020/05/16/Tutorial-on-Pybullet.html",
            "date": " • May 16, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "3D Printing",
            "content": "Introduction . 3D printing, or additive manufacturing, is the construction of a three-dimensional object from a CAD model or a digital 3D model. The term “3D printing” can refer to a variety of processes in which material is deposited, joined or solidified under computer control to create a three-dimensional object, with material being added together (such as plastics, liquids or powder grains being fused together), typically layer by layer. . . In the 1980s, 3D printing techniques were considered suitable only for the production of functional or aesthetic prototypes, and a more appropriate term for it at the time was rapid prototyping. As of 2019, the precision, repeatability, and material range of 3D printing have increased to the point that some 3D printing processes are considered viable as an industrial-production technology, whereby the term additive manufacturing can be used synonymously with 3D printing. One of the key advantages of 3D printing is the ability to produce very complex shapes or geometries that would be otherwise impossible to construct by hand, including hollow parts or parts with internal truss structures to reduce weight. Fused deposition modeling (FDM), which uses a continuous filament of a thermoplastic material, is the most common 3D printing process in use as of 2020. . General Principles . Modeling . 3D printable models may be created with a computer-aided design (CAD) package, via a 3D scanner, or by a plain digital camera and photogrammetry software. 3D printed models created with CAD result in relatively fewer errors than other methods. Errors in 3D printable models can be identified and corrected before printing. The manual modeling process of preparing geometric data for 3D computer graphics is similar to plastic arts such as sculpting. 3D scanning is a process of collecting digital data on the shape and appearance of a real object, creating a digital model based on it. . CAD models can be saved in the stereolithography file format (STL), a de facto CAD file format for additive manufacturing that stores data based on triangulations of the surface of CAD models. STL is not tailored for additive manufacturing because it generates large file sizes of topology optimized parts and lattice structures due to the large number of surfaces involved. A newer CAD file format, the Additive Manufacturing File format (AMF) was introduced in 2011 to solve this problem. It stores information using curved triangulations. . Printing . Before printing a 3D model from an STL file, it must first be examined for errors. Most CAD applications produce errors in output STL files,[49][50] of the following types: . holes | faces normals | self-intersections | noise shells | manifold errors | overhang issues | . A step in the STL generation known as “repair” fixes such problems in the original model. Generally STLs that have been produced from a model obtained through 3D scanning often have more of these errors as 3D scanning is often achieved by point to point acquisition/mapping. 3D reconstruction often includes errors. . Once completed, the STL file needs to be processed by a piece of software called a “slicer”, which converts the model into a series of thin layers and produces a G-code file containing instructions tailored to a specific type of 3D printer (FDM printers). This G-code file can then be printed with 3D printing client software (which loads the G-code, and uses it to instruct the 3D printer during the 3D printing process). . Printer resolution describes layer thickness and X–Y resolution in dots per inch (dpi) or micrometers (µm). Typical layer thickness is around 100 μm (250 DPI), although some machines can print layers as thin as 16 μm (1,600 DPI). X–Y resolution is comparable to that of laser printers. The particles (3D dots) are around 50 to 100 μm (510 to 250 DPI) in diameter. For that printer resolution, specifying a mesh resolution of 0.01–0.03 mm and a chord length ≤ 0.016 mm generates an optimal STL output file for a given model input file. Specifying higher resolution results in larger files without increase in print quality. . Construction of a model with contemporary methods can take anywhere from several hours to several days, depending on the method used and the size and complexity of the model. Additive systems can typically reduce this time to a few hours, although it varies widely depending on the type of machine used and the size and number of models being produced simultaneously. . Finishing . Though the printer-produced resolution is sufficient for many applications, greater accuracy can be achieved by printing a slightly oversized version of the desired object in standard resolution and then removing material using a higher-resolution subtractive process. . The layered structure of all additive manufacturing processes leads inevitably to a stair-stepping effect on part surfaces which are curved or tilted in respect to the building platform. The effects strongly depend on the orientation of a part surface inside the building process. . Some printable polymers such as ABS, allow the surface finish to be smoothed and improved using chemical vapor processes based on acetone or similar solvents. . Some additive manufacturing techniques are capable of using multiple materials in the course of constructing parts. These techniques are able to print in multiple colors and color combinations simultaneously, and would not necessarily require painting. . Some printing techniques require internal supports to be built for overhanging features during construction. These supports must be mechanically removed or dissolved upon completion of the print. . All of the commercialized metal 3D printers involve cutting the metal component off the metal substrate after deposition. A new process for the GMAW 3D printing allows for substrate surface modifications to remove aluminum or steel. . Materials . Traditionally, 3D printing focused on polymers for printing, due to the ease of manufacturing and handling polymeric materials. However, the method has rapidly evolved to not only print various polymers but also metals and ceramics, making 3D printing a versatile option for manufacturing. Layer-by-layer fabrication of three-dimensional physical models is a modern concept that “stems from the ever-growing CAD industry, more specifically the solid modeling side of CAD. Before solid modeling was introduced in the late 1980s, three-dimensional models were created with wire frames and surfaces.” but in all cases the layers of materials are controlled by the printer and the material properties. The three-dimensional material layer is controlled by deposition rate as set by the printer operator and stored in a computer file. The earliest printed patented material was a Hot melt type ink for printing patterns using a heated metal alloy. See 1970s history above. . Charles Hull filed the first patent on August 8, 1984, to use a UV-cured acrylic resin using a UV masked light source at UVP Corp to build a simple model. The SLA-1 was the first SL product announced by 3D Systems at Autofact Exposition, Detroit, November 1978 in Detroit. The SLA-1 Beta shipped in Jan 1988 to Baxter Healthcare, Pratt and Whitney, General Motors and AMP. The first production SLA-1 shipped to Precision Castparts in April 1988. The UV resin material changed over quickly to an epoxy-based material resin. In both cases, SLA-1 models needed UV oven curing after being rinsed in a solvent cleaner to remove uncured boundary resin. A Post Cure Apparatus (PCA) was sold with all systems. The early resin printers required a blade to move fresh resin over the model on each layer. The layer thickness was 0.006 inches and the HeCd Laser model of the SLA-1 was 12 watts and swept across the surface at 30 in per second. UVP was acquired by 3D Systems in Jan 1990. . A review in the history shows a number of materials (resins, plastic powder, plastic filament and hot-melt plastic ink) were used in the 1980s for patents in the rapid prototyping field. Masked lamp UV-cured resin was also introduced by Cubital’s Itzchak Pomerantz in the Soldier 5600, Carl Deckard’s (DTM) laser sintered thermoplastic powders, and adhesive-laser cut paper (LOM) stacked to form objects by Michael Feygin before 3D Systems made its first announcement. Scott Crump was also working with extruded “melted” plastic filament modeling (FDM) and Drop deposition had been patented by William E Masters a week after Charles Hull’s patent in 1984, but he had to discover Thermoplastic Inkjets introduced by Visual Impact Corporation 3D printer in 1992 using inkjets from Howtek, Inc., before he formed BPM to bring out his own 3D printer product in 1994. . Multi-material 3D printing . Efforts to achieve multi-material 3D printing range from enhanced FDM-like processes like VoxelJet, to novel voxel-based printing technologies like layered assembly. . A drawback of many existing 3D printing technologies is that they only allow one material to be printed at a time, limiting many potential applications which require the integration of different materials in the same object. Multi-material 3D printing solves this problem by allowing objects of complex and heterogeneous arrangements of materials to be manufactured using a single printer. Here, a material must be specified for each voxel (or 3D printing pixel element) inside the final object volume. . The process can be fraught with complications, however, due to the isolated and monolithic algorithms. Some commercial devices have sought to solve these issues, such as building a Spec2Fab translator, but the progress is still very limited. Nonetheless, in the medical industry, a concept of 3D printed pills and vaccines has been presented. With this new concept, multiple medications can be combined, which will decrease many risks. With more and more applications of multi-material 3D printing, the costs of daily life and high technology development will become inevitably lower. . Metallographic materials of 3D printing is also being researched. By classifying each material, CIMP-3D can systematically perform 3D printing with multiple materials. . 4D printing . Using 3D printing and multi-material structures in additive manufacturing has allowed for the design and creation of what is called 4D printing. 4D printing is an additive manufacturing process in which the printed object changes shape with time, temperature, or some other type of stimulation. 4D printing allows for the creation of dynamic structures with adjustable shapes, properties or functionality. The smart/stimulus responsive materials that are created using 4D printing can be activated to create calculated responses such as self-assembly, self-repair, multi-functionality, reconfiguration and shape shifting. This allows for customized printing of shape changing and shape-memory materials. . 4D printing has the potential to find new applications and uses for materials (plastics, composites, metals, etc.) and will create new alloys and composites that were not viable before. The versatility of this technology and materials can lead to advances in multiple fields of industry, including space, commercial and the medical field. The repeatability, precision, and material range for 4D printing must increase to allow the process to become more practical throughout these industries. . To become a viable industrial production option, there are a couple of challenges that 4D printing must overcome. The challenges of 4D printing include the fact that the microstructures of these printed smart materials must be close to or better than the parts obtained through traditional machining processes. New and customizable materials need to be developed that have the ability to consistently respond to varying external stimuli and change to their desired shape. There is also a need to design new software for the various technique types of 4D printing. The 4D printing software will need to take into consideration the base smart material, printing technique, and structural and geometric requirements of the design. .",
            "url": "https://tayalmanan28.github.io/my_blogs/3d-printing/robotics/2019/12/22/3D-Printing.html",
            "relUrl": "/3d-printing/robotics/2019/12/22/3D-Printing.html",
            "date": " • Dec 22, 2019"
        }
        
    
  
    
        ,"post9": {
            "title": "How to Choose Batteries",
            "content": "Batteries are the energy storage units of many devices that we come across every day; they are available in different forms, sizes, parameters, and shapes. You can commonly find them being used in automotive, Backup power supplies, mobile devices, laptops, iPads, and many other portable electronic devices. But, not all the devices can use the same kind of battery; each and every device has its own specifications and power supply requirements and you will need a battery selection guide to pick the right battery for your application. So in this article will look into the factors to consider while selecting a battery for your next electronic product design. If you are completely news to batteries then it is recommended to read this article on types of batteries and their applications to understand the basics of battery before you proceed further. . Factors for Choosing Batteries . While choosing a battery for your application you must know about the important parameters involved in its operation. The reality about the battery is that there is no common type of battery for all the applications since no battery is perfect. If you want to utilize one parameter of the battery you should be able to handle the depletion of other parameters. For example, if you want your battery to deliver lots of power for your application, the cell internal resistance should be minimized which is only possible by increasing the electrode surface area. This also increases inactive components such as current collectors and conductive aid, so energy density is traded off to gain power. In order to provide exactly what you want in your application, you must give up something to gain the other in a battery. The important battery parameters are given in the following image. . Now, let’s look into each battery parameter briefly to understand its importance and impact on battery performance during operation. . Rechargeable / Non-Rechargeable batteries . There might not be much confusion in choosing between a primary and secondary battery, you must only know if you want the battery to be used once or multiple times. The primary (Non-Rechargeable) battery can be used for occasional uses like toys, Flashlights, Smoke alarm, etc. They are also used in devices in which charging isn’t possible like pacemakers, wristwatches and hearing aids. The Secondary (rechargeable) batteries can be used in the applications where there is a need for a regular power source like mobile phones, laptops, Automotives, etc. The secondary batteries always have a higher self-discharge rate compared to primary batteries which are an ignorant fact due to its ability to be recharged. . Availability of Space . The Batteries are available in various shapes and size like button cells, cylindrical cells, Pouch cells &amp; prismatic cells. The size of the battery really matters in order to make your device easily portable. The standard sizes available are AA, AAA and 9V batteries suitable for portable devices. Commonly lithium batteries (pouch type) are preferred in applications where there is less space but more power requirement. If the power requirement is less then coin cells can also be considered since they are very compact and the smallest of battery types. . Different Shapes of Battery . System Operating Voltage . The battery voltage is one of the most important characteristics of the battery, which is determined based on the electrode &amp; electrolyte used (Chemical Reaction). There is a common misconception that a fully discharged battery will have 0V it is clearly not the case in any battery. In fact, if a battery reads 0V then it probably is dead. The output voltage of a battery should always read between its nominal voltage level. . The Zinc-Carbon battery and Nickel-metal hydride battery uses water as an electrolyte and delivers a nominal voltage of 1.2V to 2V, whereas the lithium-based batteries use organic electrolytes that can deliver a nominal voltage of 3.2 to 4V. Most of the electronic pieces of equipment operate in the voltage range of 3V. If you use a lithium-based battery a single cell battery will be enough to operate the equipment. Do remember that the voltage of the battery will not be stable and will vary between a minimum value and maximum value based on the available capacity in the battery. This minimum and maximum value of each battery is shown below. . Minimum and Maximum Value of Battery . If your circuit is operating at 5V and you are powering it with a lithium battery, then your nominal voltage will only be 3.2V to 4V. In these cases, boost converter circuits are used to convert the battery voltage to 5V required for the circuit. If your operating voltage is very high like 24V or 12V then you can either use a 12V lead-acid battery or if you need high power density then you can combine more than one lithium cells in series to increase the resulting output voltage. . Operating Temperature . The battery performance can be dramatically changed by the temperature, for instance the battery that is operating with aqueous electrolytes cannot be used in temperature conditions below 0°C as they aqueous electrolyte might get frozen under 0°C, in the same way, the lithium-based batteries might operate up to -40°C but the performance might be dropped. . Battery Performance . The lithium-ion batteries have the maximum charging rate between the temperature ranges of about 20°C to 45°C. If you want to charge beyond this temperature range lower current/voltage need to be used, this will result in longer charging time. If the temperature drops below 5°C or 10°C lithium dendrite plating will be formed in the electrolyte which needs to be prevented by trickle charge. . Capacity of the battery - Power &amp; Energy . The power of the battery determines the runtime of a battery. The power/Capacity of the battery is expressed in Watt-hours (Wh). The Watt-hour is calculated by multiplying the battery voltage (V) by the amount of current that a battery can deliver for a certain amount of time. The voltage of the battery is almost fixed and the current that a battery can deliver is printed on the battery, expressed in Ampere-hour rating (Ah or mAh). . Consider a battery of 5V with 2 Amp-hour (Ah) capacity, hence it has a power of 10Wh. A battery with the capacity of 2Ah can deliver 2 Amp for one hour or 0.2A for 10 hours or 0.02A (20mA) for 100 hours. Battery manufacturers always specify the capacity at a given discharge rate, temperature, and cut-off voltage, where the capacity always depends on all three factors. . The capacity of a battery will tell us how much power it can deliver to an application. For example, consider a 12V, 10Ah car battery, the actual capacity of the battery is 120Wh (12V x 10Ah), but in a laptop battery of 3.6V that has the same 10Ah dissipation will have a capacity of 36Wh (3.6Vx 10Ah). From the example you can see even they have the same Ah the amount of power that a car battery can store is three times higher than a laptop battery. . The following picture will give you more clarity about how the battery capacity differs in different types of batteries. . Capacity of Batteries . Batteries with high power always provide a faster discharge capability at high drain rates like power tools or automobile starter battery applications, most of the high power batteries will have a low energy density. . Battery Chemistry . By this time you would have understood that all the properties of a battery are always depending on the chemistry involved in the battery, so you should be more conscious while you choose the type of battery. On the basis of the chemistry involved in the operation, batteries are classified as Lead Acid Batteries, Alkaline Batteries, Ni-Cad Batteries (Nickel Cadmium), Ni- MH Batteries (Nickel Metal Hydride), Li-Ion (Lithium-Ion) and LiPoly (Lithium Polymer) Batteries . Different types of Battery . Cost of Battery . In most portable electronics products the battery will be one among the expensive item in the Bill of Materials (BOM), hence most of the time it will affect the overall cost of your electronic applications. Hence, you should know your needs and budget of your product and then choose the right battery for your product. . Shelf Life . Not all the batteries are used immediately after manufacturing, they stay on the shelf for a long time before it’s being used. The shelf life of a battery tells you how long a battery can be kept unused. The Shelf life is mostly considered as a fact in primary batteries only as the secondary batteries can be recharged whenever they are used. For example in a fire alarm siren system, the battery might sit there idle for years before it detects a fire and triggers the alarm. So care should be taken that the battery retains its performance even if it is kept unused for a long time. . Which battery should I choose? . Now that we have looked into the parameters you should consider before choosing the battery for a portable electronic application, let’s look into the common cases of choosing the battery. Note that these are just tips and not hard written rules. . For products that consume more power like projectors, large sound systems, and motorized projects you should use lead-acid batteries. If you are going to have heavy usage of the battery you should go for ‘Marine deep cycle’ batteries. | If your electronics need to be super small like an inch on each side you should go for the lithium coin cells or little lithium polymer cells. | If you are going to produce the component in large quantity use inexpensive alkaline batteries of popular sizes. So the customer finds it easy to replace them. | If you want the device to be user-serviceable, like the users can change the battery by themselves go for 9V or AA-size batteries. | Use 3 Alkaline (4.5V) or 4NiMH cells (4.8V) if the circuit needs approximately 5V input. | To build a rechargeable battery pack use a battery holder from your local shop and stick it with NiMH batteries and then start recharging your battery. | If you want to replace your alkaline battery with any of the rechargeable batteries, test your device to make sure that it can operate at lower voltage without any issue. | If you want your battery to have a longer life span always use a high-quality charger with sensors to maintain proper charging and trickle charging because using a cheap charger will kill off your cells in the battery pack. | .",
            "url": "https://tayalmanan28.github.io/my_blogs/battery/robotics/2019/11/19/how-to-choose-batteries.html",
            "relUrl": "/battery/robotics/2019/11/19/how-to-choose-batteries.html",
            "date": " • Nov 19, 2019"
        }
        
    
  
    
        ,"post10": {
            "title": "How to Choose Motors",
            "content": "How Motors Work and How to Choose the Right Motor . Motors can be found practically everywhere. This guide will help you learn the basics of electric motors, available types and how to choose the correct motor. The basic questions to answer while deciding which motor is most appropriate for an application are which type should I choose and which specifications matter. . How do motors work? . Electric motors work by converting electrical energy to mechanical energy in order to create motion. Force is generated within the motor through the interaction between a magnetic field and winding alternating (AC) or direct (DC) current. As the strength of a current increases so does the strength of the magnetic field. Keep Ohm’s law (V = I*R) in mind; voltage must increase in order to maintain the same current as resistance increases. . Electric Motors have an array of applications. Conventional industrial uses include blowers, machine and power tools, fans and pumps. Hobbyists generally use motors in smaller applications requiring movement such as robotics or modules with wheels. Types of motors: There are many types of DC motors, but the most common are brushed or brushless. There are also vibrating motors, stepper motors, and servo motors. . DC Brush Motors . DC brush motors are one of the most simple and are found in many appliances, toys, and automobiles. They use contact brushes that connect with a commutator to alter current direction. They are inexpensive to produce and simple to control and have excellent torque at low speeds (measured in revolutions per minute or RPM). A few downsides are that they require constant maintenance to replace worn out brushes, have limited in speed due to brush heating, and can generate electromagnetic noise from brush arcing. . Brushless DC Motors . Brushless DC motors use permanent magnets in their rotor assembly. They are popular in the hobby market for aircraft and ground vehicle applications. They are more efficient, require less maintenance, generate less noise, and have higher power density than brushed DC motors. They can also be mass-produced and resemble an AC motor with a constant RPM, except powered by DC current. There are a few disadvantages however, which include that they are difficult to control without a specialized regulator and they require low starting loads and specialized gearboxes in drive applications causing them to have a higher capital cost, complexity, and environmental limitations. . Vibrating Motors . Vibrating motors are used for applications requiring vibration such as cell phones or game controllers. They are generated by an electric motor and have an unbalanced mass on the drive shaft which causes the vibration. They can also be used in non-electronic buzzers that vibrate for the purpose of sound or for alarms or door bells. . Stepper Motor . Whenever precise positioning is involved, stepper motors are your friend. They’re found in printers, machine tools, and process control systems and are built for high-holding torque that gives the user the ability to move from one step to the next. They have a controller system that designates the position through signal pulses sent to a driver, which interprets them and sends proportional voltage to the motor. They are relatively simple to make and control, but they draw maximum current constantly. Small step distance limits top speed and steps can be skipped at high loads. . Servo Motor . Servo motors are another popular hobby market motor and are used for position control without precision. Their popular applications include remote control applications like RC toy vehicles and robotics. They consist of a motor, potentiometer, and a control circuit and are mostly controlled through pulse width modulation (PWM), through the sending of electrical pulses to the control wire. Servos can be either AC or DC. AC servos can handle higher current surges and are used for industrial machinery, whereas DC servos are for smaller hobbyist applications. To learn more about servos check out our How Servo Motors Work article. . AC Motors . There are three basic types of AC motors: induction, synchronous, and industrial. . Induction Motor . Induction motors are referred to as asynchronous motors, since they do not move at the same constant rate or turn slower than the frequency supplied. Slip, the difference between actual and synchronous speed, is needed to produce torque, the twisting force that causes rotation, in induction motors. The magnetic field that surrounds the rotor of these motors is caused by induced current. . Synchronus Motor . The rotor of synchronous motors spins at a constant rate as AC is supplied. Their magnetic field is created by permanent magnets. Industrial motors are designed for three-phase, high power applications such as conveyers or blowers. AC motors can also be found in home appliances and other applications such as clocks, fans, and disk drives. . What to consider when purchasing a motor: . There are several characteristics that you need pay attention to when selecting a motor but voltage, current, torque, and velocity (RPM) are most important. . Current is what powers the motor and too much current will damage the motor. For DC motors, operating and stall current are important. Operating current is the average amount of current the motor is expected to draw under typical torque. Stall current applies enough torque for the motor to run at stall speed, or 0RPM. This is the maximum amount of current the motor should be able to draw, as well as the maximum power when multiplied by the rated voltage. Heat sinks are important are constantly running the motor or are running it at higher than the rated voltage in order to keep the coils from melting. . | Voltage is used to keep net current flowing in one direction and to overcome back current. The higher the voltage, the higher the torque. The voltage rating of a DC motor indicates the most efficient voltage while running. Be sure to apply the recommended voltage. If you apply too few volts, the motor will not work, whereas too many volts can short windings resulting in power loss or complete destruction. . | Operating and stall values also need to be considered with torque. Operating torque is the amount of torque the motor was designed to give and stall torque is the amount of torque produced when power is applied from stall speed. You should always look at the required operating torque, but some applications will require you to know how far you can push the motor. For example, with a wheeled robot, good torque equals good acceleration but you must make sure the stall torque is strong enough to lift the weight of the robot. In this instance, torque is more important than speed. . | Velocity, or speed (RPM), can be complex regarding motors. The general rule is that motors run most efficiently at the highest speeds but it is not always possible if gearing is required. Adding gears will reduce the efficiency of the motor, so take into account speed and torque reduction as well. . | . These are the basics to consider while selecting a motor. Consider an application’s purpose and which current it uses to select the appropriate type of motor. An application’s specifications such as voltage, current, torque, and velocity will determine which motor is most appropriate so be sure to pay attention to its requirements. .",
            "url": "https://tayalmanan28.github.io/my_blogs/motor/robotics/2019/09/21/how-to-choose-motors.html",
            "relUrl": "/motor/robotics/2019/09/21/how-to-choose-motors.html",
            "date": " • Sep 21, 2019"
        }
        
    
  
    
        ,"post11": {
            "title": "Tutorial on Raspberry-Pi",
            "content": "This tutorial tries to take you through setup and using a Raspberry Pi (or RPi in short) from scratch. All you need is that you’ve bought an RPi and have an internet connection. Actually, I recommend reading this if you’re thinking of buying one, you’ll see some instructions on what you need to buy so it’s a good idea. Also the RPi documentation is the single best resource for starting with your RPi IMO, so you can also read that first. My post is somewhat complementary of that documentation. . Introduction to the RPi . I’ve often come across the question, when do I need an RPi? You’ll often need an RPi if you need a decent amount of portable processing. This is usually for complicated tasks like Machine Learning, Image Processing, running a server, etc. I’ve had mentees use RPi for various combinations of these too. . What’s so great about an RPi? . RPi fulfils the requirement of portable, high processing power. You can load an OS onto the system. It truly is the credit-card sized mini-computer. Added bonus is lots of support in the form of an active online community. RPi supports multiple popular operating systems too (eg. Ubuntu, Debian). This extends to support for multiple programming languages, which support operations on GPIO of RPi including Python and C/C++. With these, there are multiple plugin-like attachments, incuding a camera(RaspiCam). Support for multiple USB devices like a keyboard/mouse too! . Setting Up . Requirements . You should read this page before buying anything. Even if you don’t have everything listed below you can make do (for eg WiFi Router/Ethernet Cable) . Basic Setup:RPi, MicroUSB attachment(to power RPi), a microSD card(below 64GB, recommended 16GB), MicroSD Card Reader, a WiFi Router and an Ethernet Cable(if possible). . Easy Setup: Basic setup + HDMI Cable, Monitor with HDMI support, Keyboard+Mouse(Could do with one of the two, not very sure but prefer having both). . First Steps . First thing to do is choose an OS. If you’re reading this, the most logical choice for you is the Raspbian OS (It’s pretty nice, somewhat light GUI, most tutorials you find anywhere will work on Raspbian). Note that, Raspbian with Pixel DE(Desktop Environment) is the one that packs the User Interface, the other has only a terminal. If you are a complete n00b maybe you should download NOOBS (I’m kidding still use Raspbian). We start with burning an image file on the SD card. Crystal clear instructions are given at this link. . Connecting your RPi to a local network . So we have an OS on the RPi. Now what? We need to setup some sort of connection with the RPi. So here are your options: . Easy setup: You should be super comfortable. You can just connect your RPi with an HDMI cable to the monitor, add a keyboard+mouse, and there you’re done. Connect a good microUSB cable, insert the SD Card and switch the RPi’s power on. You should note you can face issues with dealt with here. It should show you something like this. Now you can use it like an OS! Connect to WiFi, scan the raspi-config for settings so you can setup whatever is appropriate for your case(don’t worry it sounds intimidating but its super easy - when in doubt you can just start exploring options in the menu. There are some games in there which aren’t super fun to play because of all the lag but you can try if you want! :) ) I think you’re good from now on! . Basic setup: No simple way to say this but I’ve failed at this method a few times. Sometimes it’s because of the terrible WiFi module on the RPi(or terrible WiFi I use), sometimes I mess up, sometimes its a plain old fashioned error I can’t understand how to debug because I can’t see anything. Easiest thing to do would be use the easy setup once, configure your RPi, then it’ll be fine to just use remote access. But if you can’t access equipment, here we go! . The crux is to get the RPi on the same local network as the PC. We can just use an ethernet cable and connect our RPi to our PCs. That is quite easy. If you don’t have one I’ll tell you what to do, keep following the post. . Start with your SD Card (plugged in to your PC). We need to edit some specific files in it to make the RPi start an SSH server on boot (IMPORTANT). SSH will enable access to your RPi remotely. You can add edit the file /etc/rc.local and add the following line at the end . /etc/init.d/ssh start . So rc.local is the “what-do-I-do-on-bootup” file. The code above starts an SSH server. . Alternatively, SSH can be enabled by placing a file called ssh in to the boot folder. This flags the Pi to enable the SSH system on the next boot. Make a blank file and name it ssh. Place it there, that’s it. HOWEVER, I DON’T RECOMMEND THIS. Simply because this file deletes on each boot(I think), so if you have to try booting twice maybe thrice, then this will kill. . If you have an ethernet cable you’re done. If not, you need to setup the RPi to connect to your wireless network on it’s own (because without an ethernet cable the RPi is not on a local network with you yet). ALTHOUGH, it’s better to do this step for both with/without ethernet since there is no harm in getting this to work. . I found a decent blog post for setting up the network here. I’m not leaving you out to dry yet don’t worry. BUT READ THAT LINK FIRST. . Edit: Found an even better one in RPi’s documentation. . So what you can do is edit this one file at /etc/wpa_supplicant/wpa_supplicant.conf and what you need to do is copy this part: . country=in update_config=1 ctrl_interface=/var/run/wpa_supplicant network={ ssid=&quot;replace_with_your_ssid&quot; psk=&quot;replace_with_your_password&quot; key_mgmt=WPA-PSK } . Since you are most probably using a WPA-PSK, this shouldn’t be a problem, it should work for all WiFis in general. If you’re not, this page can help you. If you don’t think that’s enough, then try this page. Don’t let it intimidate you, just find out the kind of network you have. You can even use your phone, try connecting to your WiFi and check the options it needs you to enter. Search these options and you should get a good lead on what kind of network your WiFi is. This is the hardest part but after this things should be breezy. . Now all you gotta do is connect to the same WiFi from your PC! . Okay, for people with an Ethernet cable who couldn’t make this work, there is some hope for you. You can connect to WiFi using your RPi terminal, but we’ll get to that shortly. . SSHing into the RPi . Easy setup: You can open the terminal and type sudo raspi-config. This will show you some settings where you may need to change the locale and keyboard layout. This is important because the layout can cause minor problems like in typing out passwords which you won’t be able to debug for a long time (happened to me). . Basic setup: Now that your RPi’s SSH is on, you can place the SD Card into the RPi, and allow it to boot by connecting a power cord. Some (read most) people may face this issue of RPi not booting up properly or at all. Please read this answer in full to resolve your issues, once and for all. Since phones are getting MicroUSB cords with better power every year, this may become redundant in the near future. After bootup fire up your SSH client: in linux/Mac you have an inbuilt one, in Windows you have to install Putty. . Working with Windows its better to follow the RPi docs, which comes packaged with instructions on getting your PI’s IP address. I use nmap for getting the IP generally. I have had many troubles trying to use raspberrypi.local, so I don’t recommend that. . Working on your RPi . Working on your RPi isn’t very difficult. I have tested a few ways and often for me, the way to go is to install git on your RPi and push changes online, while pulling changes into your RPi repo. For small changes, you can use nano/vim when SSHing into your RPi, and change it there. If you are looking for a git or a vim tutorial, you can find one at Grundy, the WnCC Wiki of IIT Bombay. . And this is it! You can now work on your RPi from your PC and hopefully use it in your projects! There are some useful things you can also lookup, like triggering a script on boot here &amp; here, building lighter OSes for RPi or using Raspbian(GUI) without the frizz, by installing PixelDE on the lite version (avoids installation of lots of software you probably don’t need), using RaspiCam and OpenCV with your RPi and doing some GPIO programming on Python. . Time to make your own projects! .",
            "url": "https://tayalmanan28.github.io/my_blogs/raspberry-pi/robotics/2019/06/20/Tutorial-on-Raspberry-Pi.html",
            "relUrl": "/raspberry-pi/robotics/2019/06/20/Tutorial-on-Raspberry-Pi.html",
            "date": " • Jun 20, 2019"
        }
        
    
  

  
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page9": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://tayalmanan28.github.io/my_blogs/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}